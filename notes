notes


    routes - "the rules"
        - where we define what routes our app supports
        - this is what the clients of our server will interact with, "contract"

    controllers (Players) - "the how(work)"
        - this is the code that implements our contracts
        - this is the code that executes the logic that honors the contract

    model
        - this is the code that handles the data layer




      let getSinglePlayer =
          // what kind of query do we need to send
          // to get a single player from the database if we know the id

          function(request, response){
              console.log ("GET /players/:id");


              // if id is falsy (null, undefined, NAN, '')
              if(!id) {
                  response.send(400); // this is the clients fault resulting in 400 error code
                  return;
              }

              let sql = "select id, firstName, lastName, gender from players where id = ?";
              let params = [id]

              database.query(sql, params, function(err, rows){
                  if(err){
                      console.log("failed to get a player from the database", err);
                      response.sendStatus(500); // this is our fault if we get an error, so 500 error code
                  } else {
                      if(rows.length > 1){
                          console.log("returned more than 1 row for id", id);
                          response.sendStatus(500); // again this is still our fault, (500) code
                      } else if (rows.length === 0){
                          response.json(null);
                      } else {


                          response.json(rows[0]);
                      }
                  }
              })
          };

          // function(request, response){
              //     console.log("GET/ players/:id");
              // }
              //
              // // if id is falsy (null)
              //     if(!id) {
              //         console.log("Failed to Get Player needed for Update");
              //         response.sendStatus(400); // this is the clients fault resulting in this error code.
              //         return;
              //     }
              //
              //     let sql = "SELECT id, firstName, lastName, gender from players WHERE id = ?";
              //     let params =[id];
              //
              //     database.query(sql, params, function(err, rows){
              //         if(err){
              //             console.log("Failed to GET a player from the database", err);
              //             response.sendStatus(500); // this is our fault if we get an error
              //         } else {
              //             if(rows.length > 1){
              //                 console.log("returned more than 1 row for id", id);
              //                 response.sendStatus(500); // this is our fault
              //             } else if (rows.length === 0){
              //                 response.json(null);
              //             } else {
              //                 response.json(rows[0]);
              //             }
              //         }
              //     });